// <auto-generated />
using System;
using GaVietNam_Repository.Entity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GaVietNam_API.Migrations
{
    [DbContext(typeof(GaVietNamContext))]
    [Migration("20240713221134_Kaneki")]
    partial class Kaneki
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("GaVietNam_Repository.Entity.Admin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Password = "1",
                            RoleId = 1L,
                            Status = true,
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("GaVietNam_Repository.Entity.Bill", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("GaVietNam_Repository.Entity.Cart", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<double>("TotalPrice")
                        .HasColumnType("double");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            TotalPrice = 0.0,
                            UserId = 1L
                        });
                });

            modelBuilder.Entity("GaVietNam_Repository.Entity.CartItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CartId")
                        .HasColumnType("bigint");

                    b.Property<long>("KindId")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("KindId");

                    b.ToTable("CartItems");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CartId = 1L,
                            KindId = 1L,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("GaVietNam_Repository.Entity.Chicken", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Chickens");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateDate = new DateTime(2024, 7, 14, 5, 11, 34, 68, DateTimeKind.Local).AddTicks(7572),
                            Image = "https://firebasestorage.googleapis.com/v0/b/gavietnam-a1894.appspot.com/o/images%2F338fbab9-6937-4109-a246-def8c3dc1947_7-cach-uop-ga-nuong-sieu-ngon-chi-voi-muoi-ot-mat-ong-202112300913287451.jpg?alt=media&token=47f8be10-e2e3-4c73-bcc1-81c17319ef51",
                            ModifiedDate = new DateTime(2024, 7, 14, 5, 11, 34, 68, DateTimeKind.Local).AddTicks(7582),
                            Name = "Gà Tam Hoàng",
                            Price = 1000000.0,
                            Status = true,
                            Stock = 10
                        },
                        new
                        {
                            Id = 2L,
                            CreateDate = new DateTime(2024, 7, 14, 5, 11, 34, 68, DateTimeKind.Local).AddTicks(7584),
                            Image = "https://firebasestorage.googleapis.com/v0/b/gavietnam-a1894.appspot.com/o/images%2F338fbab9-6937-4109-a246-def8c3dc1947_7-cach-uop-ga-nuong-sieu-ngon-chi-voi-muoi-ot-mat-ong-202112300913287451.jpg?alt=media&token=47f8be10-e2e3-4c73-bcc1-81c17319ef51",
                            ModifiedDate = new DateTime(2024, 7, 14, 5, 11, 34, 68, DateTimeKind.Local).AddTicks(7585),
                            Name = "Gà Ta",
                            Price = 2000000.0,
                            Status = true,
                            Stock = 10
                        });
                });

            modelBuilder.Entity("GaVietNam_Repository.Entity.Contact", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Facebook")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Instagram")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Shoppee")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tiktok")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Email = "contact1@example.com",
                            Facebook = "facebook1",
                            Instagram = "instagram1",
                            Phone = "123456789",
                            Shoppee = "shoppee1",
                            Tiktok = "tiktok1"
                        });
                });

            modelBuilder.Entity("GaVietNam_Repository.Entity.Kind", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ChickenId")
                        .HasColumnType("bigint");

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<string>("KindName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("ChickenId");

                    b.ToTable("Kinds");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ChickenId = 1L,
                            Image = "image1.jpg",
                            KindName = "Xào",
                            Quantity = 5,
                            Status = true
                        },
                        new
                        {
                            Id = 2L,
                            ChickenId = 1L,
                            Image = "image2.jpg",
                            KindName = "Luộc",
                            Quantity = 5,
                            Status = true
                        },
                        new
                        {
                            Id = 3L,
                            ChickenId = 2L,
                            Image = "image1.jpg",
                            KindName = "Gỏi",
                            Quantity = 5,
                            Status = true
                        },
                        new
                        {
                            Id = 4L,
                            ChickenId = 2L,
                            Image = "image2.jpg",
                            KindName = "Nướng",
                            Quantity = 5,
                            Status = true
                        });
                });

            modelBuilder.Entity("GaVietNam_Repository.Entity.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AdminId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("OrderCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OrderRequirement")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("double");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AdminId = 1L,
                            CreateDate = new DateTime(2024, 7, 14, 5, 11, 34, 68, DateTimeKind.Local).AddTicks(7610),
                            OrderCode = "ahihi",
                            OrderRequirement = "ahihi",
                            PaymentMethod = "ahihi",
                            Status = "Successful",
                            TotalPrice = 1000000.0,
                            UserId = 1L
                        });
                });

            modelBuilder.Entity("GaVietNam_Repository.Entity.OrderItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("KindId")
                        .HasColumnType("bigint");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KindId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            KindId = 1L,
                            OrderId = 1L,
                            Price = 1000000.0,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("GaVietNam_Repository.Entity.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            RoleName = "Admin"
                        },
                        new
                        {
                            Id = 2L,
                            RoleName = "Manager"
                        },
                        new
                        {
                            Id = 3L,
                            RoleName = "Customer"
                        });
                });

            modelBuilder.Entity("GaVietNam_Repository.Entity.Token", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("IsExpired")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Revoked")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TokenValue")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Token");
                });

            modelBuilder.Entity("GaVietNam_Repository.Entity.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IdentityCard")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Avatar = "https://firebasestorage.googleapis.com/v0/b/GaVietNam-384e4.appspot.com/o/images%2F46822b4c-ad52-49c9-8602-98b1ba92e39c_jingliu-Photoroom.png-Photoroom.png?alt=media&token=277a8993-ec54-4806-9358-de42ae9ce807",
                            CreateDate = new DateTime(2024, 7, 14, 5, 11, 34, 68, DateTimeKind.Local).AddTicks(7703),
                            Dob = new DateTime(2024, 7, 14, 5, 11, 34, 68, DateTimeKind.Local).AddTicks(7702),
                            Email = "phamdat720749pd@gmail.com",
                            FullName = "Pham Quoc Dat",
                            Gender = "Male",
                            IdentityCard = "074202000730",
                            Password = "12345",
                            Phone = "0855720749",
                            RoleId = 3L,
                            Status = true,
                            Username = "kaneki"
                        });
                });

            modelBuilder.Entity("GaVietNam_Repository.Entity.Admin", b =>
                {
                    b.HasOne("GaVietNam_Repository.Entity.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("GaVietNam_Repository.Entity.Bill", b =>
                {
                    b.HasOne("GaVietNam_Repository.Entity.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("GaVietNam_Repository.Entity.Cart", b =>
                {
                    b.HasOne("GaVietNam_Repository.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GaVietNam_Repository.Entity.CartItem", b =>
                {
                    b.HasOne("GaVietNam_Repository.Entity.Cart", "Cart")
                        .WithMany()
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GaVietNam_Repository.Entity.Kind", "Kind")
                        .WithMany()
                        .HasForeignKey("KindId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Kind");
                });

            modelBuilder.Entity("GaVietNam_Repository.Entity.Kind", b =>
                {
                    b.HasOne("GaVietNam_Repository.Entity.Chicken", "Chicken")
                        .WithMany()
                        .HasForeignKey("ChickenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chicken");
                });

            modelBuilder.Entity("GaVietNam_Repository.Entity.Order", b =>
                {
                    b.HasOne("GaVietNam_Repository.Entity.Admin", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GaVietNam_Repository.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GaVietNam_Repository.Entity.OrderItem", b =>
                {
                    b.HasOne("GaVietNam_Repository.Entity.Kind", "Kind")
                        .WithMany()
                        .HasForeignKey("KindId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GaVietNam_Repository.Entity.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kind");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("GaVietNam_Repository.Entity.Token", b =>
                {
                    b.HasOne("GaVietNam_Repository.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GaVietNam_Repository.Entity.User", b =>
                {
                    b.HasOne("GaVietNam_Repository.Entity.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("GaVietNam_Repository.Entity.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
